package csci351project2;

import java.util.Random;
import java.util.Scanner;

/**
 * This program is a number guesser simple game, user will input a difficulty,
 * and the program will execute a number between 1 and x according to chosen
 * difficulty / The user can play up to 10 games.
 * @author Jihad Hassan Santos Ftouny <11820033>
 */
public class CSCI351Project2 {

    public static void main(String[] args) {
        
        boolean continueGame = true; //variable to player continue or not playing
        int guess, generatedNum; //input and generated number by the program
        int gameNum = 0; //which game number player currently is in
        boolean[] winLoss = new boolean[10]; //array to count wins and loss
        int wins = 0; //this will store how many wins
        double feedback;
        
        //print
        System.out.println("N U M B E R  G U E S S E R\n"
                +          "   Maximum games: 10\n");

        //this is the main game loop, will execute as long as player wished and as long as amount of played games was 10 or 
        while(continueGame==true && gameNum <9){
            //print
            System.out.println("  Pick Your Difficulty\n"
                    + "--------------------------\n"
                    + "1 for Easy\n"
                    + "2 for Medium\n"
                    + "3 for Hard\n"
                    + "4 for Nightmare\n"
                    + "--------------------------");
            //new scanner
            Scanner input = new Scanner(System.in);

            //asks for the input

            System.out.print("Choice: ");
            int n = input.nextInt();
            System.out.println("\nGame number " + (gameNum + 1) + "\n");

    //        this if checks if input is valid

            if (n>=1 && n<=4){
                System.out.print("Generating a number ");
                int i=0;
                //this while is for aesthetic purposes, will use sleep() method to generate a delay before each dot in ". . ."
                while (i < 3){ //this is going to cause slower execution, might have to remove it
                    try {//apparently it's a must to put a sleep() in a try catch
                        Thread.sleep(500);
                        System.out.print(". ");
                        Thread.sleep(500);
                        i++;

                    } catch (InterruptedException ex) {
    //                    Logger.getLogger(CSCI351Project2.class.getName()).log(Level.SEVERE, null, ex); //error message automatically generated by the autocomplete, research what it does
                        //do I even need this in the program? Could just print(ex)
                    }
                }
                System.out.println("\n");
                generatedNum = numberGen(n);
                System.out.println("Generated num: " + generatedNum); //debug purposes
                guess = input.nextInt();
                System.out.println("\n");

                
                //this if else chain will set the array value of the game turn to true if the guess was correct
                if(guess == generatedNum){
                    System.out.println("-------------------");
                    System.out.println("| You're correct! |");
                    System.out.println("-------------------\n");
                    wins++;
                    winLoss[gameNum] = true; //will set the array to true (its default is false)
                }
                else{
                    System.out.println("-------------------");
                    System.out.println("|     Try again!  |\n"
                            +          "| The number was " + generatedNum);
                    System.out.println("-------------------\n");
                }
                
                System.out.println("Wins: " + wins + " -- Games: " + (gameNum + 1));
                gameNum++;
                
                System.out.println("Continue? (use 'true' and 'false')");
                continueGame = input.nextBoolean();
                System.out.println("");
            }//end game round (if)
        }// end game (while)
        
        //add array to count wins and losses? pretty useless lol. maybe a boolean array to show which games player won
        
        wins = 0;
        //this will count how many games you won
        for (int i = 0; i < gameNum; i++){
            if (winLoss[i] == true){
                wins++;
                // print winLoss[i]
            }
        }
        
        //this will show results and give feedback
        System.out.println("You played " + gameNum + " out of 10 games.\n"
                + "You won " + wins + " out of " + gameNum + " played games.");
        
        // this is used to avoid division by 0
        // also used to define the worst possible outcome in the future if chain
        boolean noWins = false;
        if (wins == 0){
            wins = 1;
            noWins = true;
        }
        
        feedback = ((double)gameNum)/((double)wins);
        System.out.println(feedback); //debug command
        if(noWins)
            System.out.println("Try leveling up your Luck stat!");
        else if(feedback == 1.0)
            System.out.println("Very good job! You did perfect!");

        else if (feedback <= 2){
            System.out.println("Good job!");
        }
        else if (feedback < gameNum){
            System.out.println("You can do better next time!");
        }
        
    }
    
    public static int numberGen(int n){
        Random rand = new Random();
        int numberGen;
        switch (n) {
            case 1:
                //easy
                numberGen = rand.nextInt(5) + 1;

                System.out.print("Pick a number between 1 and 5: ");
                break;
            case 2:
                //medium
                numberGen = rand.nextInt(10) + 1;
                System.out.print("Pick a number between 1 and 10: ");
                break;
            case 3:
                //hard
                numberGen = rand.nextInt(20) + 1; //between 1 and 20
                System.out.print("Pick a number between 1 and 20: ");
                break;
            default:
                //nightmare
                numberGen = rand.nextInt(100) + 1;  //adding a hint system would be nice, if its even/odd, prime, divisible by a set of given numbers
                System.out.print("Pick a number between 1 and 100: ");
                break;
        }
//        System.out.println("generated number:" + numberGen); //debug command
        return numberGen;
    }
    
}
